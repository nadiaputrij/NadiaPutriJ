
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"D:\SEMESTER 4\Keamanan Informasi\build\assets\frame0")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def xor_cipher(text, key):
    text_bytes = [ord(char) for char in text]
    key_bytes = [ord(char) for char in key]
    encrypted_bytes = [text_byte ^ key_bytes[i % len(key_bytes)] for i, text_byte in enumerate(text_bytes)]
    encrypted_text = ''.join([format(byte, '02X') for byte in encrypted_bytes])
    return encrypted_text

def xor_decipher(encrypted_text, key):
    encrypted_bytes = [int(encrypted_text[i:i+2], 16) for i in range(0, len(encrypted_text), 2)]
    key_bytes = [ord(char) for char in key]
    decrypted_bytes = [encrypted_byte ^ key_bytes[i % len(key_bytes)] for i, encrypted_byte in enumerate(encrypted_bytes)]
    decrypted_text = ''.join([chr(byte) for byte in decrypted_bytes])
    return decrypted_text

def encrypt_text():
    plaintext = entry_1.get("1.0", "end-1c")
    key = "121212"
    encrypted_text = xor_cipher(plaintext, key)
    entry_2.delete("1.0", "end")
    entry_2.insert("1.0", encrypted_text)

def decrypt_text():
    encrypted_text = entry_1.get("1.0", "end-1c")
    key = "121212"
    decrypted_text = xor_decipher(encrypted_text, key)
    entry_2.delete("1.0", "end")
    entry_2.insert("1.0", decrypted_text)

window = Tk()
window.geometry("800x500")
window.configure(bg="#DAB3DB")

canvas = Canvas(
    window,
    bg="#DAB3DB",
    height=500,
    width=800,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)
canvas.place(x=0, y=0)

image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(58.0, 56.0, image=image_image_1)

image_image_2 = PhotoImage(file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(293.0, 48.0, image=image_image_2)

image_image_3 = PhotoImage(file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(294.0, 242.0, image=image_image_3)

entry_image_1 = PhotoImage(file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(436.5, 139.5, image=entry_image_1)
entry_1 = Text(bd=0, bg="#FFFFFF", fg="#000716", highlightthickness=0)
entry_1.place(x=188.0, y=100.0, width=497.0, height=77.0)

entry_image_2 = PhotoImage(file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(436.5, 334.5, image=entry_image_2)
entry_2 = Text(bd=0, bg="#FFFFFF", fg="#000716", highlightthickness=0)
entry_2.place(x=188.0, y=295.0, width=497.0, height=77.0)

button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
button_1 = Button(image=button_image_1, borderwidth=0, highlightthickness=0, command=encrypt_text, relief="flat")
button_1.place(x=105.0, y=414.0, width=165.0, height=49.0)

button_image_2 = PhotoImage(file=relative_to_assets("button_2.png"))
button_2 = Button(image=button_image_2, borderwidth=0, highlightthickness=0, command=decrypt_text, relief="flat")
button_2.place(x=602.0, y=409.0, width=165.0, height=49.0)

window.resizable(False, False)
window.mainloop()
